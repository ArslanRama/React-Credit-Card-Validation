{"ast":null,"code":"var _jsxFileName = \"/home/alucard/Documents/Web Development/6- REACT/LESSON CHAPTERS/25-React Recap Arif/src/components/FuncComponent.js\",\n    _s = $RefreshSig$();\n\n// Import react hook\nimport { useState, useEffect } from \"react\";\n/**\n * func component rules:\n * 1. must return a jsx \n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function FuncComponent() {\n  _s();\n\n  // state must have a type e.g const, let\n  const initialData = {\n    name: 'Aslan',\n    age: 36\n  }; // const [stateName, functionToUpdateState] = useState(initial data)\n\n  const [state, setState] = useState(initialData);\n  const [users, setUsers] = useState([{\n    id: 1,\n    name: 'Harry'\n  }]); // Update Handler\n\n  const updateName = () => {\n    // use hook to update data\n    setState({ ...state,\n      age: 35\n    });\n  }; // lifeCycle Method\n\n\n  useEffect(() => {\n    console.log('Data loaded from functional...');\n    fetch('https://jsonplaceholder.typicode.com/users').then(response => response.json()).then(data => {\n      console.log(data);\n      setUsers(data);\n    });\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"I am a Functional Component\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          className: \"title\",\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"UserName\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: users.map((user, index) => {\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: user.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: user.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: user.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 37\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 33\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"I am  \", state.age, \" years old and my name is \", state.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: updateName,\n      children: \"Change the age\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n}\n\n_s(FuncComponent, \"H+ZxXnxqhk6snF/qou4ua/1mdp0=\");\n\n_c = FuncComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"FuncComponent\");","map":{"version":3,"sources":["/home/alucard/Documents/Web Development/6- REACT/LESSON CHAPTERS/25-React Recap Arif/src/components/FuncComponent.js"],"names":["useState","useEffect","FuncComponent","initialData","name","age","state","setState","users","setUsers","id","updateName","console","log","fetch","then","response","json","data","map","user","index","email","username"],"mappings":";;;AAAA;AACA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA;AACA;AACA;AACA;;;AACA,eAAe,SAASC,aAAT,GAAyB;AAAA;;AACpC;AACA,QAAMC,WAAW,GAAG;AAChBC,IAAAA,IAAI,EAAE,OADU;AAEhBC,IAAAA,GAAG,EAAE;AAFW,GAApB,CAFoC,CAOpC;;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAACG,WAAD,CAAlC;AACA,QAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,CAC/B;AAACU,IAAAA,EAAE,EAAC,CAAJ;AAAON,IAAAA,IAAI,EAAC;AAAZ,GAD+B,CAAD,CAAlC,CAToC,CAcpC;;AACA,QAAMO,UAAU,GAAG,MAAM;AACrB;AACAJ,IAAAA,QAAQ,CAAC,EAAE,GAAGD,KAAL;AAAYD,MAAAA,GAAG,EAAE;AAAjB,KAAD,CAAR;AACH,GAHD,CAfoC,CAoBpC;;;AACAJ,EAAAA,SAAS,CAAC,MAAM;AACZW,IAAAA,OAAO,CAACC,GAAR,CAAY,gCAAZ;AACAC,IAAAA,KAAK,CAAC,4CAAD,CAAL,CACKC,IADL,CACUC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADtB,EAEKF,IAFL,CAEUG,IAAI,IAAI;AACVN,MAAAA,OAAO,CAACC,GAAR,CAAYK,IAAZ;AACAT,MAAAA,QAAQ,CAACS,IAAD,CAAR;AACH,KALL;AAMH,GARQ,CAAT;AAWA,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,8BACI;AAAA,+BACI;AAAI,UAAA,SAAS,EAAC,OAAd;AAAA,kCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAQI;AAAA,kBAEQV,KAAK,CAACW,GAAN,CAAU,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACvB,8BACI;AAAA,oCACI;AAAA,wBAAKD,IAAI,CAAChB;AAAV;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAA,wBAAKgB,IAAI,CAACE;AAAV;AAAA;AAAA;AAAA;AAAA,oBAFJ,eAGI;AAAA,wBAAKF,IAAI,CAACG;AAAV;AAAA;AAAA;AAAA;AAAA,oBAHJ;AAAA,aAASF,KAAT;AAAA;AAAA;AAAA;AAAA,kBADJ;AAOH,SARD;AAFR;AAAA;AAAA;AAAA;AAAA,cARJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAyBI;AAAA,2BAAWf,KAAK,CAACD,GAAjB,gCAAgDC,KAAK,CAACF,IAAtD;AAAA;AAAA;AAAA;AAAA;AAAA,YAzBJ,eA0BI;AACI,MAAA,IAAI,EAAC,QADT;AAEI,MAAA,OAAO,EAAEO,UAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YA1BJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAiCH;;GAjEuBT,a;;KAAAA,a","sourcesContent":["// Import react hook\nimport { useState, useEffect } from \"react\";\n/**\n * func component rules:\n * 1. must return a jsx \n */\nexport default function FuncComponent() {\n    // state must have a type e.g const, let\n    const initialData = {\n        name: 'Aslan',\n        age: 36,\n\n    }\n    // const [stateName, functionToUpdateState] = useState(initial data)\n    const [state, setState] = useState(initialData)\n    const [users, setUsers] = useState([\n        {id:1, name:'Harry'}\n        \n    ]);\n\n    // Update Handler\n    const updateName = () => {\n        // use hook to update data\n        setState({ ...state, age: 35 })\n    }\n\n    // lifeCycle Method\n    useEffect(() => {\n        console.log('Data loaded from functional...')\n        fetch('https://jsonplaceholder.typicode.com/users')\n            .then(response => response.json())\n            .then(data => {\n                console.log(data)\n                setUsers(data)\n            })\n    })\n\n\n    return (\n        <div>\n            <h1>I am a Functional Component</h1>\n            <table>\n                <thead>\n                    <tr className=\"title\">\n                        <th>Name</th>\n                        <th>Email</th>\n                        <th>UserName</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {\n                        users.map((user, index) => {\n                            return (\n                                <tr key={index}>\n                                    <td>{user.name}</td>\n                                    <td>{user.email}</td>\n                                    <td>{user.username}</td>\n                                </tr>\n                            )\n                        })\n                    }\n                </tbody>\n            </table>\n\n            <h2>I am  {state.age} years old and my name is {state.name}</h2>\n            <button\n                type=\"button\"\n                onClick={updateName}>Change the age\n          </button>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}