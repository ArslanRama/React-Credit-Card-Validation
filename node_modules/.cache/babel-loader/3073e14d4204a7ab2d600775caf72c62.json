{"ast":null,"code":"var _jsxFileName = \"/home/alucard/Documents/Web Development/6- REACT/Github Pages/React Credit Card Validation/src/App.js\";\nimport React from 'react';\nimport Visa from \"./assets/icons8-visa.svg\";\nimport Mastercard from \"./assets/icons8-mastercard.svg\";\nimport Discover from \"./assets/icons8-discover.svg\";\nimport Amex from \"./assets/icons8-amex.svg\";\nimport { prefixes } from './prefixes.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Logo = ({\n  type,\n  alt,\n  active\n}) => {\n  let imgClass = 'cc-logo';\n\n  if (active) {\n    imgClass = 'cc-logo active';\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"img\", {\n      src: type,\n      alt: `${alt} credit card logo`,\n      className: imgClass\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_c = Logo;\n\nclass CreditCardForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getValidMessage = () => {\n      if (this.state.valid !== '') {\n        return this.state.valid ? 'Valid âœ“' : 'Credit card number is invalid';\n      }\n\n      return '';\n    };\n\n    this.verifyNumber = () => {\n      let sum = 0;\n      let temp = 0;\n      let cardNumberCopy = this.state.cardNumber;\n      let checkDigit = parseInt(this.state.cardNumber.slice(-1));\n      let parity = cardNumberCopy.length % 2;\n\n      for (let i = 0; i <= cardNumberCopy.length - 2; i++) {\n        if (i % 2 === parity) {\n          temp = +cardNumberCopy[i] * 2;\n        } else {\n          temp = +cardNumberCopy[i];\n        }\n\n        if (temp > 9) {\n          temp -= 9;\n        }\n\n        sum += temp;\n      }\n\n      return (sum + checkDigit) % 10 === 0;\n    };\n\n    this.purgeInactive = (firstCard, secondCard, thirdCard, fourthCard) => {\n      this.setState({\n        ['active' + firstCard]: false,\n        ['active' + secondCard]: false,\n        ['active' + thirdCard]: false,\n        ['active' + fourthCard]: true,\n        valid: ''\n      });\n    };\n\n    this.determineType = cardNumber => {\n      for (let key of prefixes) {\n        for (let value of key[1]) {\n          if (cardNumber.startsWith(value)) {\n            this.setState({\n              type: key[0]\n            });\n            /* TODO: Find a better way to manage this. */\n\n            switch (key[0]) {\n              case 'Visa':\n                this.purgeInactive('Mastercard', 'Discover', 'Amex', 'Visa');\n                break;\n\n              case 'Mastercard':\n                this.purgeInactive('Visa', 'Discover', 'Amex', 'Mastercard');\n                break;\n\n              case 'Discover':\n                this.purgeInactive('Visa', 'Mastercard', 'Amex', 'Discover');\n                break;\n\n              case 'Amex':\n                this.purgeInactive('Visa', 'Mastercard', 'Discover', 'Amex');\n                break;\n\n              default:\n                break;\n            }\n\n            return;\n          } else {\n            this.setState({\n              ['active' + key[0]]: false,\n              type: '',\n              valid: ''\n            });\n          }\n        }\n      }\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        cardNumber: e.target.value\n      });\n    };\n\n    this.handleClick = e => {\n      this.setState({\n        cardNumber: '',\n        valid: ''\n      });\n    };\n\n    this.state = {\n      maxLength: 16,\n      cardNumber: '',\n      placeholder: 'Enter credit card number',\n      activeVisa: false,\n      // TODO: Clean this up\n      activeMastercard: false,\n      activeDiscover: false,\n      activeAmex: false,\n      type: '',\n      valid: '',\n      error: {}\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.cardNumber !== this.state.cardNumber) {\n      this.determineType(this.state.cardNumber);\n    }\n\n    if (prevState.activeAmex !== this.state.activeAmex) {\n      this.state.activeAmex ? this.setState({\n        maxLength: 15\n      }) : this.setState({\n        maxLength: 16\n      });\n    }\n\n    if (prevState.type !== this.state.type) {\n      if (this.state.type !== '') {\n        this.setState({\n          ['active' + this.state.type]: true\n        });\n      }\n    }\n    /* A chain like this just seems wrong. */\n\n\n    if (prevState.cardNumber.length !== this.state.cardNumber.length && this.state.cardNumber.length === this.state.maxLength) {\n      this.setState({\n        valid: this.verifyNumber()\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-addon\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: this.state.cardNumber,\n          placeholder: this.state.placeholder,\n          maxLength: this.state.maxLength,\n          onChange: this.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"reset\",\n          onClick: this.handleClick,\n          children: \"reset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: this.state.valid ? 'error valid' : 'error invalid',\n          children: this.getValidMessage()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Logo, {\n          type: Visa,\n          alt: \"Visa\",\n          active: this.state.activeVisa\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Logo, {\n          type: Mastercard,\n          alt: \"Mastercard\",\n          active: this.state.activeMastercard\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Logo, {\n          type: Discover,\n          alt: \"Discover\",\n          active: this.state.activeDiscover\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Logo, {\n          type: Amex,\n          alt: \"American Express\",\n          active: this.state.activeAmex\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"header\",\n      children: \"Credit Card Number Validation\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cc-form\",\n      children: /*#__PURE__*/_jsxDEV(CreditCardForm, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      children: [\"Credit card icons by \", /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"https://icons8.com/\",\n        children: \"Icons8\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 32\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_c2 = App;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Logo\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"sources":["/home/alucard/Documents/Web Development/6- REACT/Github Pages/React Credit Card Validation/src/App.js"],"names":["React","prefixes","Logo","type","alt","active","imgClass","CreditCardForm","Component","constructor","props","getValidMessage","state","valid","verifyNumber","sum","temp","cardNumberCopy","cardNumber","checkDigit","parseInt","slice","parity","length","i","purgeInactive","firstCard","secondCard","thirdCard","fourthCard","setState","determineType","key","value","startsWith","handleChange","e","target","handleClick","maxLength","placeholder","activeVisa","activeMastercard","activeDiscover","activeAmex","error","componentDidUpdate","prevProps","prevState","render","Visa","Mastercard","Discover","Amex","App"],"mappings":"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","sourcesContent":["import React from 'react';\n\n\nimport Visa from './assets/icons8-visa.svg';\nimport Mastercard from './assets/icons8-mastercard.svg';\nimport Discover from './assets/icons8-discover.svg';\nimport Amex from './assets/icons8-amex.svg';\nimport {prefixes} from './prefixes.js';\n\nconst Logo = ({ type, alt, active }) => {\n  let imgClass = 'cc-logo';\n\n  if (active) {\n    imgClass = 'cc-logo active';\n  }\n\n  return (\n    <>\n      <img src={type} alt={`${alt} credit card logo`} className={imgClass} />\n    </>\n  );\n}\n\nclass CreditCardForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      maxLength: 16,\n      cardNumber: '',\n      placeholder: 'Enter credit card number',\n      activeVisa: false, // TODO: Clean this up\n      activeMastercard: false,\n      activeDiscover: false,\n      activeAmex: false,\n      type: '',\n      valid: '',\n      error: {},\n    };\n  }\n\n  getValidMessage = () => {\n    if (this.state.valid !== '') {\n      return this.state.valid\n        ? 'Valid âœ“'\n        : 'Credit card number is invalid';\n    }\n\n    return '';\n  }\n\n  verifyNumber = () => {\n    let sum = 0;\n    let temp = 0;\n    let cardNumberCopy = this.state.cardNumber;\n    let checkDigit = parseInt(this.state.cardNumber.slice(-1));\n    let parity = cardNumberCopy.length % 2;\n\n    for (let i = 0; i <= cardNumberCopy.length - 2; i++) {\n      if (i % 2 === parity) {\n        temp = (+cardNumberCopy[i]) * 2;\n      }\n      else {\n        temp = (+cardNumberCopy[i]);\n      }\n\n      if (temp > 9) {\n        temp -= 9;\n      }\n\n      sum += temp;\n    }\n\n    return (sum + checkDigit) % 10 === 0;\n  }\n\n  /* \n    Not sure of a better way to allow arguments\n    that are switched up depending on the call\n    and only present 3/4 options at any given\n    time\n  */\n  purgeInactive = (firstCard, secondCard, thirdCard, fourthCard) => {\n    this.setState({\n      ['active' + firstCard]: false,\n      ['active' + secondCard]: false,\n      ['active' + thirdCard]: false,\n      ['active' + fourthCard]: true,\n      valid: '',\n    });\n  }\n\n  determineType = (cardNumber) => {\n\n    for (let key of prefixes) {\n      for (let value of key[1]) {\n        if (cardNumber.startsWith(value)) {\n          this.setState({\n            type: key[0],\n          });\n\n          /* TODO: Find a better way to manage this. */\n          switch (key[0]) {\n            case 'Visa':\n              this.purgeInactive('Mastercard', 'Discover', 'Amex', 'Visa');\n              break;\n            case 'Mastercard':\n              this.purgeInactive('Visa', 'Discover', 'Amex', 'Mastercard');\n              break;\n            case 'Discover':\n              this.purgeInactive('Visa', 'Mastercard', 'Amex', 'Discover');\n              break;\n            case 'Amex':\n              this.purgeInactive('Visa', 'Mastercard', 'Discover', 'Amex');\n              break;\n            default:\n              break;\n          }\n\n          return;\n        }\n        else {\n          this.setState({\n            ['active' + key[0]]: false,\n            type: '',\n            valid: '',\n          });\n        }\n      }\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.cardNumber !== this.state.cardNumber) {\n      this.determineType(this.state.cardNumber);\n    }\n\n    if (prevState.activeAmex !== this.state.activeAmex) {\n      this.state.activeAmex\n        ? this.setState({ maxLength: 15 })\n        : this.setState({ maxLength: 16 });\n    }\n\n    if (prevState.type !== this.state.type) {\n      if (this.state.type !== '') {\n        this.setState({\n          ['active' + this.state.type]: true,\n        });\n      }\n    }\n\n    /* A chain like this just seems wrong. */\n    if (prevState.cardNumber.length !== this.state.cardNumber.length\n        && this.state.cardNumber.length === this.state.maxLength) {\n          this.setState({\n            valid: this.verifyNumber(),\n          });\n    }\n  }\n\n  handleChange = (e) => {\n    this.setState({\n      cardNumber: e.target.value\n    });\n  }\n\n  handleClick = (e) => {\n    this.setState({\n      cardNumber: '',\n      valid: '',\n    });\n  }\n\n  render() {\n    return (\n      <>\n        <div className=\"input-addon\">\n          <input type=\"text\"\n            value={this.state.cardNumber}\n            placeholder={this.state.placeholder}\n            maxLength={this.state.maxLength}\n            onChange={this.handleChange}\n          />\n          <button className=\"reset\" onClick={this.handleClick}>reset</button>\n        </div>\n        <div className=\"error\">\n          <span className=\n            { this.state.valid? 'error valid' : 'error invalid' }>\n              { this.getValidMessage() }\n          </span>\n        </div>\n        <div>\n        <Logo type={Visa} \n            alt=\"Visa\"\n            active={this.state.activeVisa}\n          />\n          <Logo type={Mastercard} \n            alt= \"Mastercard\"\n            active={this.state.activeMastercard}\n          />\n          <Logo type={Discover}\n            alt=\"Discover\"\n            active={this.state.activeDiscover}\n          />\n          <Logo type={Amex}\n            alt=\"American Express\"\n            active={this.state.activeAmex}\n          />\n        </div>\n      </>\n    );\n  }\n}\n\nfunction App() {\n  return (\n    <>\n      <h1 className=\"header\">Credit Card Number Validation</h1>\n      <div className=\"cc-form\">\n        <CreditCardForm />\n      </div>\n      <footer>\n          Credit card icons by <a href=\"https://icons8.com/\">Icons8</a>\n      </footer>\n    </>\n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}