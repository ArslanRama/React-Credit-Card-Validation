{"ast":null,"code":"import _createForOfIteratorHelper from\"/home/alucard/Documents/Web Development/6- REACT/Github Pages/React Credit Card Validation/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";import _defineProperty from\"/home/alucard/Documents/Web Development/6- REACT/Github Pages/React Credit Card Validation/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _classCallCheck from\"/home/alucard/Documents/Web Development/6- REACT/Github Pages/React Credit Card Validation/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/alucard/Documents/Web Development/6- REACT/Github Pages/React Credit Card Validation/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/home/alucard/Documents/Web Development/6- REACT/Github Pages/React Credit Card Validation/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/alucard/Documents/Web Development/6- REACT/Github Pages/React Credit Card Validation/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from'react';/* Credit Card Icons */import Visa from\"./assets/icons8-visa.svg\";import Mastercard from\"./assets/icons8-mastercard.svg\";import Discover from\"./assets/icons8-discover.svg\";import Amex from\"./assets/icons8-amex.svg\";/* Card Passwords */import{prefixes}from'./prefixes.js';import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Logo=function Logo(_ref){var type=_ref.type,alt=_ref.alt,active=_ref.active;var imgClass='cc-logo';if(active){imgClass='cc-logo active';}return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(\"img\",{src:type,alt:\"\".concat(alt,\" credit card logo\"),className:imgClass})});};/* Parent Component */var CreditCardForm=/*#__PURE__*/function(_React$Component){_inherits(CreditCardForm,_React$Component);var _super=_createSuper(CreditCardForm);function CreditCardForm(props){var _this;_classCallCheck(this,CreditCardForm);_this=_super.call(this,props);_this.getValidMessage=function(){if(_this.state.valid!==''){return _this.state.valid?'Valid âœ“':'Credit card number is invalid';}return'';};_this.verifyNumber=function(){var sum=0;var temp=0;var cardNumberCopy=_this.state.cardNumber;var checkDigit=parseInt(_this.state.cardNumber.slice(-1));var parity=cardNumberCopy.length%2;for(var i=0;i<=cardNumberCopy.length-2;i++){if(i%2===parity){temp=+cardNumberCopy[i]*2;}else{temp=+cardNumberCopy[i];}if(temp>9){temp-=9;}sum+=temp;}return(sum+checkDigit)%10===0;};_this.purgeInactive=function(firstCard,secondCard,thirdCard,fourthCard){var _this$setState;_this.setState((_this$setState={},_defineProperty(_this$setState,'active'+firstCard,false),_defineProperty(_this$setState,'active'+secondCard,false),_defineProperty(_this$setState,'active'+thirdCard,false),_defineProperty(_this$setState,'active'+fourthCard,true),_defineProperty(_this$setState,\"valid\",''),_this$setState));};_this.determineType=function(cardNumber){var _iterator=_createForOfIteratorHelper(prefixes),_step;try{for(_iterator.s();!(_step=_iterator.n()).done;){var key=_step.value;var _iterator2=_createForOfIteratorHelper(key[1]),_step2;try{for(_iterator2.s();!(_step2=_iterator2.n()).done;){var value=_step2.value;if(cardNumber.startsWith(value)){_this.setState({type:key[0]});/* TODO: Find a better way to manage this. */switch(key[0]){case'Visa':_this.purgeInactive('Mastercard','Discover','Amex','Visa');break;case'Mastercard':_this.purgeInactive('Visa','Discover','Amex','Mastercard');break;case'Discover':_this.purgeInactive('Visa','Mastercard','Amex','Discover');break;case'Amex':_this.purgeInactive('Visa','Mastercard','Discover','Amex');break;default:break;}return;}else{var _this$setState2;_this.setState((_this$setState2={},_defineProperty(_this$setState2,'active'+key[0],false),_defineProperty(_this$setState2,\"type\",''),_defineProperty(_this$setState2,\"valid\",''),_this$setState2));}}}catch(err){_iterator2.e(err);}finally{_iterator2.f();}}}catch(err){_iterator.e(err);}finally{_iterator.f();}};_this.handleChange=function(e){_this.setState({cardNumber:e.target.value});};_this.handleClick=function(e){_this.setState({cardNumber:'',valid:''});};_this.state={maxLength:16,cardNumber:'',placeholder:'Enter credit card number',activeVisa:false,// TODO: Clean this up\nactiveMastercard:false,activeDiscover:false,activeAmex:false,type:'',valid:'',error:{}};return _this;}_createClass(CreditCardForm,[{key:\"componentDidUpdate\",value:/* Life Cycle Method */function componentDidUpdate(prevProps,prevState){if(prevState.cardNumber!==this.state.cardNumber){this.determineType(this.state.cardNumber);}if(prevState.activeAmex!==this.state.activeAmex){this.state.activeAmex?this.setState({maxLength:15}):this.setState({maxLength:16});}if(prevState.type!==this.state.type){if(this.state.type!==''){this.setState(_defineProperty({},'active'+this.state.type,true));}}/* A chain like this just seems wrong. */if(prevState.cardNumber.length!==this.state.cardNumber.length&&this.state.cardNumber.length===this.state.maxLength){this.setState({valid:this.verifyNumber()});}}/* Changing Data */},{key:\"render\",value:function render(){return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"input-addon\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:this.state.cardNumber,placeholder:this.state.placeholder,maxLength:this.state.maxLength,onChange:this.handleChange}),/*#__PURE__*/_jsx(\"button\",{className:\"reset\",onClick:this.handleClick,children:\"reset\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"error\",children:/*#__PURE__*/_jsx(\"span\",{className:this.state.valid?'error valid':'error invalid',children:this.getValidMessage()})}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Logo,{type:Visa,alt:\"Visa\",active:this.state.activeVisa}),/*#__PURE__*/_jsx(Logo,{type:Mastercard,alt:\"Mastercard\",active:this.state.activeMastercard}),/*#__PURE__*/_jsx(Logo,{type:Discover,alt:\"Discover\",active:this.state.activeDiscover}),/*#__PURE__*/_jsx(Logo,{type:Amex,alt:\"American Express\",active:this.state.activeAmex})]})]});}}]);return CreditCardForm;}(React.Component);function App(){return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"h1\",{className:\"header\",children:\"Credit Card Validation\"}),/*#__PURE__*/_jsx(\"div\",{className:\"cc-form\",children:/*#__PURE__*/_jsx(CreditCardForm,{})}),/*#__PURE__*/_jsxs(\"footer\",{children:[\"Credit card icons by \",/*#__PURE__*/_jsx(\"a\",{href:\"https://icons8.com/\",children:\"Icons8\"})]})]});}export default App;","map":{"version":3,"sources":["/home/alucard/Documents/Web Development/6- REACT/Github Pages/React Credit Card Validation/src/App.js"],"names":["React","prefixes","Logo","type","alt","active","imgClass","CreditCardForm","props","getValidMessage","state","valid","verifyNumber","sum","temp","cardNumberCopy","cardNumber","checkDigit","parseInt","slice","parity","length","i","purgeInactive","firstCard","secondCard","thirdCard","fourthCard","setState","determineType","key","value","startsWith","handleChange","e","target","handleClick","maxLength","placeholder","activeVisa","activeMastercard","activeDiscover","activeAmex","error","prevProps","prevState","Visa","Mastercard","Discover","Amex","Component","App"],"mappings":"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","sourcesContent":["import React from 'react';\n\n/* Credit Card Icons */\nimport Visa from './assets/icons8-visa.svg';\nimport Mastercard from './assets/icons8-mastercard.svg';\nimport Discover from './assets/icons8-discover.svg';\nimport Amex from './assets/icons8-amex.svg';\n\n/* Card Passwords */\nimport { prefixes } from './prefixes.js';\n\nconst Logo = ({ type, alt, active }) => {\n  let imgClass = 'cc-logo';\n\n  if (active) {\n    imgClass = 'cc-logo active';\n  }\n\n  return (\n    <>\n      <img src={type} alt={`${alt} credit card logo`} className={imgClass} />\n    </>\n  );\n}\n\n/* Parent Component */\nclass CreditCardForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      maxLength: 16,\n      cardNumber: '',\n      placeholder: 'Enter credit card number',\n      activeVisa: false, // TODO: Clean this up\n      activeMastercard: false,\n      activeDiscover: false,\n      activeAmex: false,\n      type: '',\n      valid: '',\n      error: {},\n    };\n  }\n\n  getValidMessage = () => {\n    if (this.state.valid !== '') {\n      return this.state.valid\n        ? 'Valid âœ“'\n        : 'Credit card number is invalid';\n    }\n\n    return '';\n  }\n\n  verifyNumber = () => {\n    let sum = 0;\n    let temp = 0;\n    let cardNumberCopy = this.state.cardNumber;\n    let checkDigit = parseInt(this.state.cardNumber.slice(-1));\n    let parity = cardNumberCopy.length % 2;\n\n    for (let i = 0; i <= cardNumberCopy.length - 2; i++) {\n      if (i % 2 === parity) {\n        temp = (+cardNumberCopy[i]) * 2;\n      }\n      else {\n        temp = (+cardNumberCopy[i]);\n      }\n\n      if (temp > 9) {\n        temp -= 9;\n      }\n\n      sum += temp;\n    }\n\n    return (sum + checkDigit) % 10 === 0;\n  }\n\n  /* \n    Not sure of a better way to allow arguments\n    that are switched up depending on the call\n    and only present 3/4 options at any given\n    time\n  */\n  purgeInactive = (firstCard, secondCard, thirdCard, fourthCard) => {\n    this.setState({\n      ['active' + firstCard]: false,\n      ['active' + secondCard]: false,\n      ['active' + thirdCard]: false,\n      ['active' + fourthCard]: true,\n      valid: '',\n    });\n  }\n\n  determineType = (cardNumber) => {\n\n    for (let key of prefixes) {\n      for (let value of key[1]) {\n        if (cardNumber.startsWith(value)) {\n          this.setState({\n            type: key[0],\n          });\n\n          /* TODO: Find a better way to manage this. */\n          switch (key[0]) {\n            case 'Visa':\n              this.purgeInactive('Mastercard', 'Discover', 'Amex', 'Visa');\n              break;\n            case 'Mastercard':\n              this.purgeInactive('Visa', 'Discover', 'Amex', 'Mastercard');\n              break;\n            case 'Discover':\n              this.purgeInactive('Visa', 'Mastercard', 'Amex', 'Discover');\n              break;\n            case 'Amex':\n              this.purgeInactive('Visa', 'Mastercard', 'Discover', 'Amex');\n              break;\n            default:\n              break;\n          }\n\n          return;\n        }\n        else {\n          this.setState({\n            ['active' + key[0]]: false,\n            type: '',\n            valid: '',\n          });\n        }\n      }\n    }\n  }\n\n/* Life Cycle Method */\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.cardNumber !== this.state.cardNumber) {\n      this.determineType(this.state.cardNumber);\n    }\n\n    if (prevState.activeAmex !== this.state.activeAmex) {\n      this.state.activeAmex\n        ? this.setState({ maxLength: 15 })\n        : this.setState({ maxLength: 16 });\n    }\n\n    if (prevState.type !== this.state.type) {\n      if (this.state.type !== '') {\n        this.setState({\n          ['active' + this.state.type]: true,\n        });\n      }\n    }\n\n    /* A chain like this just seems wrong. */\n    if (prevState.cardNumber.length !== this.state.cardNumber.length\n      && this.state.cardNumber.length === this.state.maxLength) {\n      this.setState({\n        valid: this.verifyNumber(),\n      });\n    }\n  }\n\n  /* Changing Data */\n  handleChange = (e) => {\n    this.setState({\n      cardNumber: e.target.value\n    });\n  }\n\n  handleClick = (e) => {\n    this.setState({\n      cardNumber: '',\n      valid: '',\n    });\n  }\n\n  render() {\n    return (\n      <>\n        <div className=\"input-addon\">\n          <input type=\"text\"\n            value={this.state.cardNumber}\n            placeholder={this.state.placeholder}\n            maxLength={this.state.maxLength}\n            onChange={this.handleChange}\n          />\n          <button className=\"reset\" onClick={this.handleClick}>reset</button>\n        </div>\n        <div className=\"error\">\n          <span className=\n            {this.state.valid ? 'error valid' : 'error invalid'}>\n            {this.getValidMessage()}\n          </span>\n        </div>\n        <div>\n          <Logo type={Visa}\n            alt=\"Visa\"\n            active={this.state.activeVisa}\n          />\n          <Logo type={Mastercard}\n            alt=\"Mastercard\"\n            active={this.state.activeMastercard}\n          />\n          <Logo type={Discover}\n            alt=\"Discover\"\n            active={this.state.activeDiscover}\n          />\n          <Logo type={Amex}\n            alt=\"American Express\"\n            active={this.state.activeAmex}\n          />\n        </div>\n      </>\n    );\n  }\n}\n\nfunction App() {\n  return (\n    <>\n      <h1 className=\"header\">Credit Card Validation</h1>\n      <div className=\"cc-form\">\n        <CreditCardForm />\n      </div>\n      <footer>\n        Credit card icons by <a href=\"https://icons8.com/\">Icons8</a>\n      </footer>\n    </>\n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}